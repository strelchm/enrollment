package ru.strelchm.enrollment.api;

import ru.strelchm.enrollment.api.dto.ShopUnitStatisticResponse;

import java.time.OffsetDateTime;
import java.util.UUID;

public interface NodeApi {
  /**
   * GET /node/{id}/statistic
   * Получение статистики (истории обновлений) по товару/категории за заданный полуинтервал [from, to).
   * Статистика по удаленным элементам недоступна.
   * - цена категории - это средняя цена всех её товаров, включая товары дочерних категорий.
   * Если категория не содержит товаров цена равна null.
   * При обновлении цены товара, средняя цена категории, которая содержит этот товар, тоже обновляется.
   * - можно получить статистику за всё время.
   *
   * @param id        UUID товара/категории для которой будет отображаться статистика (required)
   * @param dateStart Дата и время начала интервала, для которого считается статистика.
   *                 Дата должна обрабатываться согласно ISO 8601 (такой придерживается OpenAPI).
   *                  Если дата не удовлетворяет данному формату, необходимо отвечать 400. (optional)
   * @param dateEnd   Дата и время конца интервала, для которого считается статистика.
   *                 Дата должна обрабатываться согласно ISO 8601 (такой придерживается OpenAPI).
   *                  Если дата не удовлетворяет данному формату, необходимо отвечать 400. (optional)
   * @return Статистика по элементу. (status code 200)
   * or Некорректный формат запроса или некорректные даты интервала. (status code 400)
   * or Категория/товар не найден. (status code 404)
   */
  ShopUnitStatisticResponse nodeIdStatisticGet(UUID id, OffsetDateTime dateStart, OffsetDateTime dateEnd);
}
